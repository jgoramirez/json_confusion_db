{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","CardImgOverlay","Menu","menu","dishes","map","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","RenderLeaders","leaders","leadersShow","Media","tag","object","body","middle","heading","list","About","CardHeader","title","CommentForm","toggleModal","state","isNavOpen","isModalOpen","setState","postComment","dishId","rating","author","comment","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","RenderCommentDishes","dishComments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","DishDetail","dishInfo","comments","Header","toggleNav","handleLogin","console","log","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","ADD_COMMENT","DISHES_LOADING","DISHES_FAIL","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","ActionTypes","payload","addComment","catch","dishesFail","errmess","addDishes","commentsFail","addComments","promosFail","addPromos","promos","leadersFail","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","actions","reset","feedback","newFeedback","firstname","lastname","telnum","email","agree","contactType","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab63d492.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . . </p>\r\n        </div>\r\n    )\r\n}","export const baseUrl = 'http://localhost:3001/'","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    } else if (errMess) {\r\n        return (\r\n            <h4 className=\"text-danger\">{errMess}</h4>\r\n        )\r\n    } else {\r\n        return (\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard \r\n                        item={props.dish} \r\n                        isLoading={props.dishesLoading} \r\n                        errMess={props.dishesErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                        isLoading={props.promosLoading} \r\n                        errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} \r\n                        isLoading={props.leadersLoading}\r\n                        errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({dish, onClick}) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish}/>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    } else if (props.dishes.errMess) {\r\n        return (\r\n            <h4 className=\"text-danger\">{props.dishes.errMess}</h4>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home' >Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\r\nconst minLength = (len) => (val) => (val) && (val.length >= len)\r\nconst isNumber = (val) => !isNaN(Number(val))\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values)\r\n        this.props.resetFeedbackForm()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home' >Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2} >First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2} >Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" \r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2} >Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" \r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2} >Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}} >\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                            className=\"form-check-input\" \r\n                                            /> { ' ' }\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}} >\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\" >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>                                \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2} >Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\" >Send Feedback    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeaders({leaders}) {\n    \n    const leadersShow = leaders.leaders.map((leader) => {\n        return (\n            <Fade in>\n                <Media tag=\"li\" key={leader.id} className=\"mr-3\">\n                    <Media className=\"mr-3\" object src={baseUrl + leader.image} alt={leader.name} />\n                    <Media body middle>\n                        <Media heading>\n                            {leader.name}\n                        </Media>\n                        <Media tag=\"p\">\n                            {leader.designation}\n                        </Media>\n                        <Media tag=\"p\">\n                            {leader.description}\n                        </Media>\n                    </Media>\n                </Media>\n            </Fade>\n        );\n    });\n\n    if (leaders.isLoading) {\n        return (\n            <Loading />\n        )\n    } else if (leaders.errMess) {\n        return (\n            <h4 className=\"text-danger\">{leaders.errMess}</h4>\n        )\n    } else {\n        return (\n            <Media list>\n                <Stagger in>\n                {leadersShow}\n                </Stagger>\n            </Media>\n        )\n    }\n\n\n}\n\nfunction About(props) {\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <RenderLeaders leaders={props.leaders} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button,\r\n    Modal, ModalHeader, ModalBody, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\r\nconst minLength = (len) => (val) => (val) && (val.length >= len)\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        \r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal()\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button outline onClick={this.toggleModal} >\r\n                    <span className=\"fa fa-sign-in fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\r\n                    <ModalHeader toggle={this.toggleModal} >\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={3} >Rating</Label>\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\" >\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>                     \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={3} >Your name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={3} >Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={10}>\r\n                                    <Button type=\"submit\" color=\"primary\" >Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction RenderCommentDishes({dishComments, postComment, dishId}) {\r\n    if (dishComments != null) \r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {dishComments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                    <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                    </li>\r\n                                </Fade>\r\n                            )\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n    else \r\n        return (\r\n            <div></div>\r\n        )\r\n    /*const comment = dishComments.map((comments) => {\r\n        return (\r\n            <div key={comments.id} >\r\n                <CardBody>\r\n                    <CardText>\r\n                        {comments.comment}\r\n                    </CardText>\r\n                    <CardText>\r\n                        -- {comments.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comments.date)))}\r\n                    </CardText>\r\n                </CardBody>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (<div className=\"col-12 col-md-5 m-1\">\r\n        <h3>Comments</h3>\r\n        {comment}\r\n        <CommentForm dishId={dishId} postComment={postComment} />\r\n    </div>)*/\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading /> \r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4 className=\"text-danger\">{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.dishInfo != null) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/menu' >Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dishInfo.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dishInfo.name}</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dishInfo} />\r\n                    <RenderCommentDishes dishComments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dishInfo.id} />\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DishDetail;","import React, { Component } from 'react'\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        /*this.props = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }*/\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n\r\n        this.toggleNav = this.toggleNav.bind(this)\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleLogin = this.handleLogin.bind(this)\r\n\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        })\r\n    }\r\n\r\n    toggleModal() {\r\n        console.log(this.state)\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal()\r\n        alert(\"Username: \"+this.username.value+\" Password: \"+this.password.value+\r\n        \" Remember me: \"+this.remember.checked)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"/assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal} >\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create unique fusion experience. Our lipsmacking creation will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>\r\n                        Login\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" \r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" \r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" \r\n                                        innerRef={(input) => this.remember = input} />\r\n                                        Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"bg-primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\" >Home</Link></li>\r\n                            <li><Link to=\"/aboutus\" >About Us</Link></li>\r\n                            <li><Link to=\"/menu\" >Menu</Link></li>\r\n                            <li><Link to=\"/contactus\" >Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:#\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","export const ADD_COMMENT = 'ADD_COMMENT'\r\nexport const DISHES_LOADING = 'DISHES_LOADING'\r\nexport const DISHES_FAIL = 'DISHES_FAIL'\r\nexport const ADD_DISHES = 'ADD_DISHES'\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS'\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED'\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING'\r\nexport const ADD_PROMOS = 'ADD_PROMOS'\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED'\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING'\r\nexport const ADD_LEADERS = 'ADD_LEADERS'\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED'","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = ( comment ) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n})\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    \r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString()\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newComment),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                credentials: 'same-origin'\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ':' + response.statusText)\r\n                    error.response = response\r\n                    throw error\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => dispatch(addComment(response)))\r\n            .catch(error => { console.log('Post comments: ', error.message)\r\n                alert('Your comment could not be posted\\nError: '+error.message)\r\n            })\r\n\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true))\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ':' + response.statusText)\r\n                    error.response = response\r\n                    throw error\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n            .then(response => response.json())\r\n            .then(dishes => dispatch(addDishes(dishes)))\r\n            .catch(error => dispatch(dishesFail(error.message)))\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n})\r\n\r\nexport const dishesFail = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAIL,\r\n    payload: errmess\r\n})\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n})\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    //dispatch(commentsLoading(true))\r\n\r\n    return fetch(baseUrl + 'comments')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ':' + response.statusText)\r\n                    error.response = response\r\n                    throw error\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n            .then(response => response.json())\r\n            .then(comments => dispatch(addComments(comments)))\r\n            .catch(error => dispatch(commentsFail(error.message)))\r\n}\r\n\r\nexport const commentsFail = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true))\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ':' + response.statusText)\r\n                    error.response = response\r\n                    throw error\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n            .then(response => response.json())\r\n            .then(promos => dispatch(addPromos(promos)))\r\n            .catch(error => dispatch(promosFail(error.message)))\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n})\r\n\r\nexport const promosFail = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n})\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true))\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ':' + response.statusText)\r\n                    error.response = response\r\n                    throw error\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n            .then(response => response.json())\r\n            .then(leaders => dispatch(addLeaders(leaders)))\r\n            .catch(error => dispatch(leadersFail(error.message)))\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n})\r\n\r\nexport const leadersFail = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})\r\n\r\nexport const postFeedback = ( feedback ) => (dispatch) => {\r\n    \r\n    const newFeedback = {\r\n        firstname: feedback.firstname,\r\n        lastname: feedback.lastname,\r\n        telnum: feedback.telnum,\r\n        email: feedback.email,\r\n        agree: feedback.agree,\r\n        contactType: feedback.contactType,\r\n        message: feedback.message\r\n    }\r\n    newFeedback.date = new Date().toISOString()\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newFeedback),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                credentials: 'same-origin'\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ':' + response.statusText)\r\n                    error.response = response\r\n                    throw error\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log('Thank you for your feedback! ', JSON.stringify(response))\r\n                alert('Thank you for your feedback! ' + JSON.stringify(response))\r\n            })\r\n            .catch(error => { console.log('Post feedback: ', error.message)\r\n                alert('Your feedback could not be sended\\nError: '+error.message)\r\n            })\r\n\r\n}","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent'\r\nimport About from './AboutComponent'\r\nimport DishDetail from './DishDetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => {dispatch(fetchDishes())},  //This is a Thunk\r\n    resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n    fetchComments: () => {dispatch(fetchComments())},\r\n    fetchPromos: () => {dispatch(fetchPromos())},\r\n    fetchLeaders: () => {dispatch(fetchLeaders())},\r\n    postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n})\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() { //This is the best time to fetch data from my application\r\n        this.props.fetchDishes()\r\n        this.props.fetchComments()\r\n        this.props.fetchPromos()\r\n        this.props.fetchLeaders()\r\n    }\r\n\r\n    render() {\r\n\r\n        const HomePage = () => {\r\n            return(\r\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promosLoading={this.props.promotions.isLoading}\r\n                    promosErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            )\r\n        }\r\n\r\n        const DishWithId = ({match}) => {\r\n            return (\r\n                <DishDetail \r\n                    dishInfo={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId  === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300} >\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                            <Route exact path=\"/contactus\" component={\r\n                                () => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />\r\n                            } />\r\n                            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES: \r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload} //Spread Operator, Operador de Propagacion\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []} //Spread Operator, Operador de Propagacion\r\n        case ActionTypes.DISHES_FAIL:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []} //Spread Operator, Operador de Propagacion\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n        errMess: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS: \r\n            return {...state, isLoading: false, errMess: null, comments: action.payload} //Spread Operator, Operador de Propagacion\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []} //Spread Operator, Operador de Propagacion\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload\r\n            return {...state, comments: state.comments.concat(comment)}\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS: \r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload} //Spread Operator, Operador de Propagacion\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []} //Spread Operator, Operador de Propagacion\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []} //Spread Operator, Operador de Propagacion\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\r\n        default:\r\n            return state\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","//import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux'; //Permite configurar mi react-redux app\r\nimport { ConfigureStore } from './redux/configureStore'; //Importamos la configuracion del bloque\r\n\r\nconst store = ConfigureStore()\r\n\r\nfunction App() {\r\n//class App extends Component {\r\n\r\n  return (\r\n    <Provider store={store} >\r\n      <BrowserRouter>\r\n        <div>\r\n          <Main />\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    )\r\n\r\n    return store\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}